import type { BladeFormatterOption, CLIOption, FormatterOption } from "./main";
import * as util from "./util";
export default class Formatter {
    argumentCheck: any;
    currentIndentLevel: number;
    diffs: any;
    indentCharacter: any;
    indentSize: any;
    oniguruma: any;
    options: FormatterOption & CLIOption;
    result: any;
    shouldBeIndent: any;
    stack: any;
    vsctm: any;
    wrapAttributes: any;
    wrapLineLength: any;
    isInsideCommentBlock: boolean;
    defaultPhpFormatOption: util.FormatPhpOption;
    endOfLine: string;
    constructor(options: BladeFormatterOption);
    initializeOptions(options: BladeFormatterOption): void;
    initializeProperties(): void;
    formatContent(content: any): Promise<any>;
    formatTokenizedLines(splittedLines: any, tokenizedLines: any): Promise<any>;
    processLine(tokenizeLineResult: any, originalLine: any): Promise<void>;
    processKeyword(token: string): Promise<void>;
    processToken(tokenStruct: any, token: string): Promise<void>;
    processTokenizeResult(tokenizeLineResult: any, originalLine: any): Promise<void>;
    insertFormattedLineToResult(originalLine: any): void;
    incrementIndentLevel(level?: number): void;
    decrementIndentLevel(level?: number): void;
}
